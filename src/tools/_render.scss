@mixin render($deps...) {
  @include _buildItems($deps);

  @each $layerKey, $layerValue in $_filters {
    @each $part in $layerValue {
      .#{$part} {
        @extend %#{$part};
      }
    }
  }
}

@mixin _buildItems($parts) {
  @if (type-of($parts) == "arglist" or type-of($parts) == "list") {
    @each $part in $parts {
      @include _addItem($part);
    }
  }
  @else if (type-of($parts) == "string") {
    @include _addItem($parts);
  }
}

@mixin _addItem($part) {
  $layer: findLayer($part);
  $dependencies: findDependencies($part, $layer);
  $_filters: addFilter($part, $layer) !global;

  @if (length($dependencies) > 0) {
    @include _buildItems($dependencies);
  }
}

@function findLayer($name) {
  $l: null !default;

  @each $layerKey, $layerValue in $_exported {
    @if (map-has-key($layerValue, $name)) {
      $l: $layerKey;
    }
  }

  @return $l;
}

@function findDependencies($name, $layer: null) {
  $l: $layer !default;
  $deps: null !default;

  @if ($l == null) {
    $l: findLayer($name);
  }
  
  @if ($l != null) {
    $deps: map-get(map-get($_exported, $l), $name);
  }

  @return $deps;
}

@function addFilter($name, $layer: null) {
  $l: $layer !default;
  $result: $_filters !default;

  @if ($l == null) {
    $l: findLayer($name);
  }

  @if ($l != null) {
    @if not existFilter($name, $l) {
      $result: map-merge($_filters, (
        $l: append(map-get($_filters,  $l), '#{$name}')
      ));
    }
  }

  @return $result;
}

@function existFilter($name, $layer: null) {
  $l: $layer !default;
  $result: true;

  @if ($l == null) {
    $l: findLayer($name);
  }

  @if ($l != null) {
    $i: index(map-get($_filters, $l), $name);

    @if ($i == null) {
      $result: false;
    }
  }

  @return $result;
}